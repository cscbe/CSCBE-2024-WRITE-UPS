# This file represents the base specification of your challenge. It is used by
# other tools to install and deploy your challenge.

## START ALLOWED TO EDIT ##
name: "Flag Communicator"
author: "Th√©o Davreux"
category: Mobile
description: |-
  We caught a wild technomancer, he won't be able to terrorize little programs anymore!
  We have a few of his nasties left to deal with, he seemingly used this one to get his flags delivered straight to him.
  The app is rebelling, and refuses to give us the flag by eating it as soon as it gets it.
  Can you grab it before it gets engulfed in it's greedy maw?
tags:
  - Medium

# Specify a protocol that should be used to connect to the running image
# For example if the image is a website you can specify http or https
# Otherwise you can specify tcp
protocol: https

ports:
  - 443tcp

# OPTIONAL
# Provide paths to files that need to be share with the contestants, for example, source code.
files:
  - Challenge/Public/flag_communicator.apk

# healthcheck is a tool/script used to check a challenge
# If connection_info was provided to CTFd when the challenge was installed, it will be passed to the healthcheck script:
# ./Ressources//exploit.sh --connection-info "nc hostname 12345"
healthcheck: ./Resources/exploit.(sh|py)

# Topics are used to help tell what techniques/information a challenge involves
# They are only visible to admins
# Accepts strings
topics:
  - TLS modification
  - traffic interception

flags:
  # A static case sensitive flag
  - CSC{b1g_5n4CC_foR_th4_3VI1_ST4cc!}
## END ALLOWED EDIT ##

## START DON'T EDIT ##
value: 100
type: dynamic
extra:
  initial: 500
  decay: 100
  minimum: 50
image: null
host: null
state: hidden
version: "0.1"
## END DON'T EDIT ##

